trigger:
  branches:
    include:
      - main
  paths:
    include:
      - azure_pipelines/azure-pipelines.yml
      - frontend/**

variables:
  azureSubscription: "9abd54ba-7abf-43d5-b936-973310267f7d"
  webAppName: "xrwebsites-frontend"
  environmentName: "xrwebsites-frontend"
  agentPoolName: "Self_Hosted"  # Self-hosted agent pool
  agentName: "Lamont"           # Specific agent name
  frontendDir: "frontend"
  distDir: "$(frontendDir)/dist"

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          name: $(agentPoolName)  # Use self-hosted pool
          demands:
            - Agent.Name -equals $(agentName)  # Use specific agent "Lamont"
          allowUnauthorized: true
        timeoutInMinutes: 180

        steps:
          # ✅ Ensure repo is checked out before looking for package-lock.json
          - checkout: self

          # ✅ Fix: Use correct path for package-lock.json in cache task
          - task: Cache@2
            inputs:
              key: 'npm | "$(Agent.OS)" | frontend/package-lock.json'
              path: '$(frontendDir)/node_modules'
              restoreKeys: |
                npm | "$(Agent.OS)"
            displayName: "Cache node_modules"

          - task: Cache@2
            inputs:
              key: 'npm-global | "$(Agent.OS)"'
              path: ~/.npm
              restoreKeys: |
                npm-global | "$(Agent.OS)"
            displayName: "Cache global npm directory"

          - task: NodeTool@0
            inputs:
              versionSpec: "20.18.0"
            displayName: "Install Node.js"

          - script: |
              cd $(frontendDir)
              npm ci
              npm run build
            displayName: "Install Dependencies and Build"

          - script: |
              cd $(frontendDir)
              cp package.json dist/
              cp server.js dist/
              cd dist
              npm install --production
              echo '#!/bin/bash' > run.sh
              echo 'npm run start' >> run.sh
              chmod +x run.sh
            displayName: "Setup Deployment"

          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: "$(distDir)"
              artifactName: "frontend-dist"
            displayName: "Publish Build Artifacts"
